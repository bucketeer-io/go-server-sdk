// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/feature/strategy.proto

package feature

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Strategy_Type int32

const (
	Strategy_FIXED   Strategy_Type = 0
	Strategy_ROLLOUT Strategy_Type = 1
)

var Strategy_Type_name = map[int32]string{
	0: "FIXED",
	1: "ROLLOUT",
}

var Strategy_Type_value = map[string]int32{
	"FIXED":   0,
	"ROLLOUT": 1,
}

func (x Strategy_Type) String() string {
	return proto.EnumName(Strategy_Type_name, int32(x))
}

func (Strategy_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_af577afa91468b26, []int{2, 0}
}

type FixedStrategy struct {
	Variation            string   `protobuf:"bytes,1,opt,name=variation,proto3" json:"variation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FixedStrategy) Reset()         { *m = FixedStrategy{} }
func (m *FixedStrategy) String() string { return proto.CompactTextString(m) }
func (*FixedStrategy) ProtoMessage()    {}
func (*FixedStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_af577afa91468b26, []int{0}
}

func (m *FixedStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixedStrategy.Unmarshal(m, b)
}
func (m *FixedStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixedStrategy.Marshal(b, m, deterministic)
}
func (m *FixedStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixedStrategy.Merge(m, src)
}
func (m *FixedStrategy) XXX_Size() int {
	return xxx_messageInfo_FixedStrategy.Size(m)
}
func (m *FixedStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_FixedStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_FixedStrategy proto.InternalMessageInfo

func (m *FixedStrategy) GetVariation() string {
	if m != nil {
		return m.Variation
	}
	return ""
}

type RolloutStrategy struct {
	Variations           []*RolloutStrategy_Variation `protobuf:"bytes,1,rep,name=variations,proto3" json:"variations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *RolloutStrategy) Reset()         { *m = RolloutStrategy{} }
func (m *RolloutStrategy) String() string { return proto.CompactTextString(m) }
func (*RolloutStrategy) ProtoMessage()    {}
func (*RolloutStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_af577afa91468b26, []int{1}
}

func (m *RolloutStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RolloutStrategy.Unmarshal(m, b)
}
func (m *RolloutStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RolloutStrategy.Marshal(b, m, deterministic)
}
func (m *RolloutStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RolloutStrategy.Merge(m, src)
}
func (m *RolloutStrategy) XXX_Size() int {
	return xxx_messageInfo_RolloutStrategy.Size(m)
}
func (m *RolloutStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_RolloutStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_RolloutStrategy proto.InternalMessageInfo

func (m *RolloutStrategy) GetVariations() []*RolloutStrategy_Variation {
	if m != nil {
		return m.Variations
	}
	return nil
}

type RolloutStrategy_Variation struct {
	Variation            string   `protobuf:"bytes,1,opt,name=variation,proto3" json:"variation,omitempty"`
	Weight               int32    `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RolloutStrategy_Variation) Reset()         { *m = RolloutStrategy_Variation{} }
func (m *RolloutStrategy_Variation) String() string { return proto.CompactTextString(m) }
func (*RolloutStrategy_Variation) ProtoMessage()    {}
func (*RolloutStrategy_Variation) Descriptor() ([]byte, []int) {
	return fileDescriptor_af577afa91468b26, []int{1, 0}
}

func (m *RolloutStrategy_Variation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RolloutStrategy_Variation.Unmarshal(m, b)
}
func (m *RolloutStrategy_Variation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RolloutStrategy_Variation.Marshal(b, m, deterministic)
}
func (m *RolloutStrategy_Variation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RolloutStrategy_Variation.Merge(m, src)
}
func (m *RolloutStrategy_Variation) XXX_Size() int {
	return xxx_messageInfo_RolloutStrategy_Variation.Size(m)
}
func (m *RolloutStrategy_Variation) XXX_DiscardUnknown() {
	xxx_messageInfo_RolloutStrategy_Variation.DiscardUnknown(m)
}

var xxx_messageInfo_RolloutStrategy_Variation proto.InternalMessageInfo

func (m *RolloutStrategy_Variation) GetVariation() string {
	if m != nil {
		return m.Variation
	}
	return ""
}

func (m *RolloutStrategy_Variation) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type Strategy struct {
	Type                 Strategy_Type    `protobuf:"varint,1,opt,name=type,proto3,enum=bucketeer.feature.Strategy_Type" json:"type,omitempty"`
	FixedStrategy        *FixedStrategy   `protobuf:"bytes,2,opt,name=fixed_strategy,json=fixedStrategy,proto3" json:"fixed_strategy,omitempty"`
	RolloutStrategy      *RolloutStrategy `protobuf:"bytes,3,opt,name=rollout_strategy,json=rolloutStrategy,proto3" json:"rollout_strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Strategy) Reset()         { *m = Strategy{} }
func (m *Strategy) String() string { return proto.CompactTextString(m) }
func (*Strategy) ProtoMessage()    {}
func (*Strategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_af577afa91468b26, []int{2}
}

func (m *Strategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Strategy.Unmarshal(m, b)
}
func (m *Strategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Strategy.Marshal(b, m, deterministic)
}
func (m *Strategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Strategy.Merge(m, src)
}
func (m *Strategy) XXX_Size() int {
	return xxx_messageInfo_Strategy.Size(m)
}
func (m *Strategy) XXX_DiscardUnknown() {
	xxx_messageInfo_Strategy.DiscardUnknown(m)
}

var xxx_messageInfo_Strategy proto.InternalMessageInfo

func (m *Strategy) GetType() Strategy_Type {
	if m != nil {
		return m.Type
	}
	return Strategy_FIXED
}

func (m *Strategy) GetFixedStrategy() *FixedStrategy {
	if m != nil {
		return m.FixedStrategy
	}
	return nil
}

func (m *Strategy) GetRolloutStrategy() *RolloutStrategy {
	if m != nil {
		return m.RolloutStrategy
	}
	return nil
}

func init() {
	proto.RegisterEnum("bucketeer.feature.Strategy_Type", Strategy_Type_name, Strategy_Type_value)
	proto.RegisterType((*FixedStrategy)(nil), "bucketeer.feature.FixedStrategy")
	proto.RegisterType((*RolloutStrategy)(nil), "bucketeer.feature.RolloutStrategy")
	proto.RegisterType((*RolloutStrategy_Variation)(nil), "bucketeer.feature.RolloutStrategy.Variation")
	proto.RegisterType((*Strategy)(nil), "bucketeer.feature.Strategy")
}

func init() { proto.RegisterFile("proto/feature/strategy.proto", fileDescriptor_af577afa91468b26) }

var fileDescriptor_af577afa91468b26 = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0x8d, 0xfb, 0xa3, 0xbd, 0x63, 0x5b, 0xcd, 0x83, 0x14, 0x19, 0x52, 0xfa, 0x54, 0xc4,
	0xa5, 0x30, 0xfd, 0x02, 0x8a, 0x4e, 0x84, 0xca, 0x20, 0x4e, 0x11, 0x5f, 0xa4, 0xed, 0xd2, 0xae,
	0x38, 0x4d, 0xc9, 0x52, 0xb5, 0x5f, 0xc7, 0x4f, 0xe9, 0xa3, 0x2c, 0x76, 0x99, 0xd5, 0xa1, 0x8f,
	0xf7, 0xf6, 0xfc, 0xee, 0x39, 0x3d, 0x04, 0x7a, 0x99, 0xe0, 0x92, 0x7b, 0x31, 0x0b, 0x64, 0x2e,
	0x98, 0x37, 0x97, 0x22, 0x90, 0x2c, 0x29, 0x88, 0x5a, 0xe3, 0x9d, 0x30, 0x8f, 0x1e, 0x99, 0x64,
	0x4c, 0x90, 0x52, 0xe1, 0xf4, 0xa1, 0x3d, 0x4c, 0xdf, 0xd8, 0xe4, 0xba, 0x54, 0xe2, 0x1e, 0x18,
	0x2f, 0x81, 0x48, 0x03, 0x99, 0xf2, 0x67, 0x0b, 0xd9, 0xc8, 0x35, 0xe8, 0x6a, 0xe1, 0xbc, 0x23,
	0xe8, 0x52, 0x3e, 0x9b, 0xf1, 0x5c, 0x6a, 0xc2, 0x07, 0xd0, 0x82, 0xb9, 0x85, 0xec, 0x9a, 0xdb,
	0x1a, 0x1c, 0x92, 0x5f, 0x56, 0xe4, 0x07, 0x47, 0x6e, 0x97, 0x10, 0xfd, 0xc6, 0xef, 0x9d, 0x80,
	0xa1, 0x3f, 0xfc, 0x1d, 0x06, 0xef, 0x42, 0xf3, 0x95, 0xa5, 0xc9, 0x54, 0x5a, 0x9b, 0x36, 0x72,
	0x1b, 0xb4, 0x9c, 0x9c, 0x0f, 0x04, 0xdb, 0x3a, 0xdd, 0x31, 0xd4, 0x65, 0x91, 0x31, 0x45, 0x77,
	0x06, 0xf6, 0x9a, 0x5c, 0x3a, 0xd0, 0xb8, 0xc8, 0x18, 0x55, 0x6a, 0x7c, 0x01, 0x9d, 0x78, 0x51,
	0xcb, 0xc3, 0xb2, 0x41, 0x65, 0xd1, 0x5a, 0xcb, 0x57, 0xfa, 0xa3, 0xed, 0xb8, 0x52, 0xe7, 0x15,
	0x98, 0xe2, 0xeb, 0xbf, 0x57, 0xa7, 0x6a, 0xea, 0x94, 0xf3, 0x7f, 0x45, 0xb4, 0x2b, 0xaa, 0x0b,
	0x67, 0x1f, 0xea, 0x8b, 0x94, 0xd8, 0x80, 0xc6, 0xf0, 0xf2, 0xee, 0xfc, 0xcc, 0xdc, 0xc0, 0x2d,
	0xd8, 0xa2, 0x23, 0xdf, 0x1f, 0xdd, 0x8c, 0x4d, 0x74, 0x7a, 0x70, 0xef, 0x26, 0xa9, 0x9c, 0xe6,
	0x21, 0x89, 0xf8, 0x93, 0x17, 0x05, 0xfd, 0x49, 0xe6, 0x69, 0x1b, 0xaf, 0xf2, 0x38, 0xc2, 0xa6,
	0x1a, 0x8f, 0x3e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xae, 0x66, 0x72, 0xef, 0x34, 0x02, 0x00, 0x00,
}
