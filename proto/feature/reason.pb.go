// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/feature/reason.proto

package feature

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Reason_Type int32

const (
	Reason_TARGET        Reason_Type = 0
	Reason_RULE          Reason_Type = 1
	Reason_DEFAULT       Reason_Type = 3
	Reason_CLIENT        Reason_Type = 4
	Reason_OFF_VARIATION Reason_Type = 5
)

var Reason_Type_name = map[int32]string{
	0: "TARGET",
	1: "RULE",
	3: "DEFAULT",
	4: "CLIENT",
	5: "OFF_VARIATION",
}

var Reason_Type_value = map[string]int32{
	"TARGET":        0,
	"RULE":          1,
	"DEFAULT":       3,
	"CLIENT":        4,
	"OFF_VARIATION": 5,
}

func (x Reason_Type) String() string {
	return proto.EnumName(Reason_Type_name, int32(x))
}

func (Reason_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ba0b6765d89ba99e, []int{0, 0}
}

type Reason struct {
	Type                 Reason_Type `protobuf:"varint,1,opt,name=type,proto3,enum=bucketeer.feature.Reason_Type" json:"type,omitempty"`
	RuleId               string      `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Reason) Reset()         { *m = Reason{} }
func (m *Reason) String() string { return proto.CompactTextString(m) }
func (*Reason) ProtoMessage()    {}
func (*Reason) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba0b6765d89ba99e, []int{0}
}

func (m *Reason) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reason.Unmarshal(m, b)
}
func (m *Reason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reason.Marshal(b, m, deterministic)
}
func (m *Reason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reason.Merge(m, src)
}
func (m *Reason) XXX_Size() int {
	return xxx_messageInfo_Reason.Size(m)
}
func (m *Reason) XXX_DiscardUnknown() {
	xxx_messageInfo_Reason.DiscardUnknown(m)
}

var xxx_messageInfo_Reason proto.InternalMessageInfo

func (m *Reason) GetType() Reason_Type {
	if m != nil {
		return m.Type
	}
	return Reason_TARGET
}

func (m *Reason) GetRuleId() string {
	if m != nil {
		return m.RuleId
	}
	return ""
}

func init() {
	proto.RegisterEnum("bucketeer.feature.Reason_Type", Reason_Type_name, Reason_Type_value)
	proto.RegisterType((*Reason)(nil), "bucketeer.feature.Reason")
}

func init() { proto.RegisterFile("proto/feature/reason.proto", fileDescriptor_ba0b6765d89ba99e) }

var fileDescriptor_ba0b6765d89ba99e = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x4b, 0x4d, 0x2c, 0x29, 0x2d, 0x4a, 0xd5, 0x2f, 0x4a, 0x4d, 0x2c, 0xce, 0xcf,
	0xd3, 0x03, 0x0b, 0x0a, 0x09, 0x26, 0x95, 0x26, 0x67, 0xa7, 0x96, 0xa4, 0xa6, 0x16, 0xe9, 0x41,
	0xe5, 0x95, 0xe6, 0x33, 0x72, 0xb1, 0x05, 0x81, 0xd5, 0x08, 0x19, 0x71, 0xb1, 0x94, 0x54, 0x16,
	0xa4, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x19, 0xc9, 0xe9, 0x61, 0x28, 0xd6, 0x83, 0x28, 0xd4,
	0x0b, 0xa9, 0x2c, 0x48, 0x0d, 0x02, 0xab, 0x15, 0x12, 0xe7, 0x62, 0x2f, 0x2a, 0xcd, 0x49, 0x8d,
	0xcf, 0x4c, 0x91, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0x03, 0x71, 0x3d, 0x53, 0x94, 0x3c,
	0xb8, 0x58, 0x40, 0xca, 0x84, 0xb8, 0xb8, 0xd8, 0x42, 0x1c, 0x83, 0xdc, 0x5d, 0x43, 0x04, 0x18,
	0x84, 0x38, 0xb8, 0x58, 0x82, 0x42, 0x7d, 0x5c, 0x05, 0x18, 0x85, 0xb8, 0xb9, 0xd8, 0x5d, 0x5c,
	0xdd, 0x1c, 0x43, 0x7d, 0x42, 0x04, 0x98, 0x41, 0x4a, 0x9c, 0x7d, 0x3c, 0x5d, 0xfd, 0x42, 0x04,
	0x58, 0x84, 0x04, 0xb9, 0x78, 0xfd, 0xdd, 0xdc, 0xe2, 0xc3, 0x1c, 0x83, 0x3c, 0x1d, 0x43, 0x3c,
	0xfd, 0xfd, 0x04, 0x58, 0x9d, 0xb4, 0xa2, 0x34, 0xd2, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92,
	0xf3, 0x73, 0xf5, 0x93, 0x13, 0x75, 0x53, 0x0a, 0xf4, 0xe1, 0x4e, 0xd3, 0x47, 0xf1, 0x6d, 0x12,
	0x1b, 0x98, 0x6b, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x25, 0x1d, 0x2a, 0x05, 0x01, 0x00,
	0x00,
}
