// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/feature/clause.proto

package feature

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Clause_Operator int32

const (
	Clause_EQUALS           Clause_Operator = 0
	Clause_IN               Clause_Operator = 1
	Clause_ENDS_WITH        Clause_Operator = 2
	Clause_STARTS_WITH      Clause_Operator = 3
	Clause_SEGMENT          Clause_Operator = 4
	Clause_GREATER          Clause_Operator = 5
	Clause_GREATER_OR_EQUAL Clause_Operator = 6
	Clause_LESS             Clause_Operator = 7
	Clause_LESS_OR_EQUAL    Clause_Operator = 8
	Clause_BEFORE           Clause_Operator = 9
	Clause_AFTER            Clause_Operator = 10
)

var Clause_Operator_name = map[int32]string{
	0:  "EQUALS",
	1:  "IN",
	2:  "ENDS_WITH",
	3:  "STARTS_WITH",
	4:  "SEGMENT",
	5:  "GREATER",
	6:  "GREATER_OR_EQUAL",
	7:  "LESS",
	8:  "LESS_OR_EQUAL",
	9:  "BEFORE",
	10: "AFTER",
}

var Clause_Operator_value = map[string]int32{
	"EQUALS":           0,
	"IN":               1,
	"ENDS_WITH":        2,
	"STARTS_WITH":      3,
	"SEGMENT":          4,
	"GREATER":          5,
	"GREATER_OR_EQUAL": 6,
	"LESS":             7,
	"LESS_OR_EQUAL":    8,
	"BEFORE":           9,
	"AFTER":            10,
}

func (x Clause_Operator) String() string {
	return proto.EnumName(Clause_Operator_name, int32(x))
}

func (Clause_Operator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00f2cc08ab5346e3, []int{0, 0}
}

type Clause struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attribute            string          `protobuf:"bytes,2,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Operator             Clause_Operator `protobuf:"varint,3,opt,name=operator,proto3,enum=bucketeer.feature.Clause_Operator" json:"operator,omitempty"`
	Values               []string        `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Clause) Reset()         { *m = Clause{} }
func (m *Clause) String() string { return proto.CompactTextString(m) }
func (*Clause) ProtoMessage()    {}
func (*Clause) Descriptor() ([]byte, []int) {
	return fileDescriptor_00f2cc08ab5346e3, []int{0}
}

func (m *Clause) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Clause.Unmarshal(m, b)
}
func (m *Clause) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Clause.Marshal(b, m, deterministic)
}
func (m *Clause) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Clause.Merge(m, src)
}
func (m *Clause) XXX_Size() int {
	return xxx_messageInfo_Clause.Size(m)
}
func (m *Clause) XXX_DiscardUnknown() {
	xxx_messageInfo_Clause.DiscardUnknown(m)
}

var xxx_messageInfo_Clause proto.InternalMessageInfo

func (m *Clause) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Clause) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

func (m *Clause) GetOperator() Clause_Operator {
	if m != nil {
		return m.Operator
	}
	return Clause_EQUALS
}

func (m *Clause) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterEnum("bucketeer.feature.Clause_Operator", Clause_Operator_name, Clause_Operator_value)
	proto.RegisterType((*Clause)(nil), "bucketeer.feature.Clause")
}

func init() { proto.RegisterFile("proto/feature/clause.proto", fileDescriptor_00f2cc08ab5346e3) }

var fileDescriptor_00f2cc08ab5346e3 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0x6d, 0xb7, 0x75, 0xed, 0x19, 0x9b, 0xd9, 0x41, 0xa4, 0x88, 0x17, 0x63, 0x57, 0x45,
	0xb0, 0x05, 0xbd, 0x17, 0x3a, 0xcd, 0xe6, 0x60, 0x6e, 0x98, 0x54, 0x04, 0x6f, 0x46, 0xda, 0x45,
	0x2d, 0x4e, 0x3a, 0xb2, 0xc4, 0x07, 0xf2, 0x15, 0x7c, 0x41, 0x69, 0xad, 0x1b, 0xe2, 0x5d, 0xfe,
	0xef, 0xfc, 0xf9, 0x48, 0x38, 0x70, 0xb2, 0x51, 0x85, 0x2e, 0xa2, 0x67, 0x29, 0xb4, 0x51, 0x32,
	0xca, 0xd6, 0xc2, 0x6c, 0x65, 0x58, 0x41, 0xec, 0xa7, 0x26, 0x7b, 0x93, 0x5a, 0x4a, 0x15, 0xd6,
	0xf3, 0xe1, 0x97, 0x0d, 0xce, 0x75, 0xd5, 0xc1, 0x1e, 0xd8, 0xf9, 0xca, 0xb7, 0x06, 0x56, 0xe0,
	0x31, 0x3b, 0x5f, 0xe1, 0x29, 0x78, 0x42, 0x6b, 0x95, 0xa7, 0x46, 0x4b, 0xdf, 0xae, 0xf0, 0x1e,
	0xe0, 0x15, 0xb8, 0xc5, 0x46, 0x2a, 0xa1, 0x0b, 0xe5, 0x37, 0x06, 0x56, 0xd0, 0xbb, 0x18, 0x86,
	0xff, 0xf4, 0xe1, 0x8f, 0x3a, 0x5c, 0xd4, 0x4d, 0xb6, 0xbb, 0x83, 0xc7, 0xe0, 0x7c, 0x88, 0xb5,
	0x91, 0x5b, 0xbf, 0x39, 0x68, 0x04, 0x1e, 0xab, 0xd3, 0xf0, 0xd3, 0x02, 0xf7, 0xb7, 0x8e, 0x00,
	0x0e, 0xbd, 0x7f, 0x88, 0x67, 0x9c, 0x1c, 0xa0, 0x03, 0xf6, 0x74, 0x4e, 0x2c, 0xec, 0x82, 0x47,
	0xe7, 0x37, 0x7c, 0xf9, 0x38, 0x4d, 0x6e, 0x89, 0x8d, 0x87, 0xd0, 0xe1, 0x49, 0xcc, 0x92, 0x1a,
	0x34, 0xb0, 0x03, 0x6d, 0x4e, 0x27, 0x77, 0x74, 0x9e, 0x90, 0x66, 0x19, 0x26, 0x8c, 0xc6, 0x09,
	0x65, 0xa4, 0x85, 0x47, 0x40, 0xea, 0xb0, 0x5c, 0xb0, 0x65, 0x25, 0x26, 0x0e, 0xba, 0xd0, 0x9c,
	0x51, 0xce, 0x49, 0x1b, 0xfb, 0xd0, 0x2d, 0x4f, 0xfb, 0xa1, 0x5b, 0x3e, 0x60, 0x44, 0xc7, 0x0b,
	0x46, 0x89, 0x87, 0x1e, 0xb4, 0xe2, 0x71, 0x69, 0x82, 0xd1, 0xd9, 0x53, 0xf0, 0x92, 0xeb, 0x57,
	0x93, 0x86, 0x59, 0xf1, 0x1e, 0x65, 0xe2, 0x7c, 0xb5, 0x89, 0x76, 0x9f, 0x8f, 0xfe, 0x6c, 0x20,
	0x75, 0xaa, 0x78, 0xf9, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x30, 0xd6, 0x54, 0x45, 0x99, 0x01, 0x00,
	0x00,
}
