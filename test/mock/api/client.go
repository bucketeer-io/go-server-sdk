// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package api is a generated GoMock package.
package api

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	models "github.com/ca-dp/bucketeer-go-server-sdk/pkg/bucketeer/models"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// GetEvaluation mocks base method.
func (m *MockClient) GetEvaluation(req *models.GetEvaluationRequest) (*models.GetEvaluationResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEvaluation", req)
	ret0, _ := ret[0].(*models.GetEvaluationResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEvaluation indicates an expected call of GetEvaluation.
func (mr *MockClientMockRecorder) GetEvaluation(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEvaluation", reflect.TypeOf((*MockClient)(nil).GetEvaluation), req)
}

// RegisterEvents mocks base method.
func (m *MockClient) RegisterEvents(req *models.RegisterEventsRequest) (*models.RegisterEventsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterEvents", req)
	ret0, _ := ret[0].(*models.RegisterEventsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RegisterEvents indicates an expected call of RegisterEvents.
func (mr *MockClientMockRecorder) RegisterEvents(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterEvents", reflect.TypeOf((*MockClient)(nil).RegisterEvents), req)
}
