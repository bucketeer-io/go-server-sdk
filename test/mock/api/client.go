// Code generated by MockGen. DO NOT EDIT.
// Source: client.go
//
// Generated by this command:
//
//	mockgen -source=client.go -package=api -destination=../../../test/mock/api/client.go
//

// Package api is a generated GoMock package.
package api

import (
	reflect "reflect"

	gateway "github.com/bucketeer-io/bucketeer/proto/gateway"
	gomock "go.uber.org/mock/gomock"

	model "github.com/bucketeer-io/go-server-sdk/pkg/bucketeer/model"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// GetEvaluation mocks base method.
func (m *MockClient) GetEvaluation(req *model.GetEvaluationRequest) (*model.GetEvaluationResponse, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEvaluation", req)
	ret0, _ := ret[0].(*model.GetEvaluationResponse)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetEvaluation indicates an expected call of GetEvaluation.
func (mr *MockClientMockRecorder) GetEvaluation(req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEvaluation", reflect.TypeOf((*MockClient)(nil).GetEvaluation), req)
}

// GetFeatureFlags mocks base method.
func (m *MockClient) GetFeatureFlags(req *model.GetFeatureFlagsRequest) (*model.GetFeatureFlagsResponse, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFeatureFlags", req)
	ret0, _ := ret[0].(*model.GetFeatureFlagsResponse)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetFeatureFlags indicates an expected call of GetFeatureFlags.
func (mr *MockClientMockRecorder) GetFeatureFlags(req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFeatureFlags", reflect.TypeOf((*MockClient)(nil).GetFeatureFlags), req)
}

// GetSegmentUsers mocks base method.
func (m *MockClient) GetSegmentUsers(req *model.GetSegmentUsersRequest) (*gateway.GetSegmentUsersResponse, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSegmentUsers", req)
	ret0, _ := ret[0].(*gateway.GetSegmentUsersResponse)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetSegmentUsers indicates an expected call of GetSegmentUsers.
func (mr *MockClientMockRecorder) GetSegmentUsers(req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSegmentUsers", reflect.TypeOf((*MockClient)(nil).GetSegmentUsers), req)
}

// RegisterEvents mocks base method.
func (m *MockClient) RegisterEvents(req *model.RegisterEventsRequest) (*model.RegisterEventsResponse, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterEvents", req)
	ret0, _ := ret[0].(*model.RegisterEventsResponse)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// RegisterEvents indicates an expected call of RegisterEvents.
func (mr *MockClientMockRecorder) RegisterEvents(req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterEvents", reflect.TypeOf((*MockClient)(nil).RegisterEvents), req)
}
