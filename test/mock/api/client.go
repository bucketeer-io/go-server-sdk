// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package api is a generated GoMock package.
package api

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	api "github.com/ca-dp/bucketeer-go-server-sdk/pkg/bucketeer/api"
)

// MockRestClient is a mock of RestClient interface.
type MockRestClient struct {
	ctrl     *gomock.Controller
	recorder *MockRestClientMockRecorder
}

// MockRestClientMockRecorder is the mock recorder for MockRestClient.
type MockRestClientMockRecorder struct {
	mock *MockRestClient
}

// NewMockRestClient creates a new mock instance.
func NewMockRestClient(ctrl *gomock.Controller) *MockRestClient {
	mock := &MockRestClient{ctrl: ctrl}
	mock.recorder = &MockRestClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRestClient) EXPECT() *MockRestClientMockRecorder {
	return m.recorder
}

// GetEvaluation mocks base method.
func (m *MockRestClient) GetEvaluation(req *api.GetEvaluationRequest) (*api.GetEvaluationResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEvaluation", req)
	ret0, _ := ret[0].(*api.GetEvaluationResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEvaluation indicates an expected call of GetEvaluation.
func (mr *MockRestClientMockRecorder) GetEvaluation(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEvaluation", reflect.TypeOf((*MockRestClient)(nil).GetEvaluation), req)
}

// RegisterEvents mocks base method.
func (m *MockRestClient) RegisterEvents(req *api.RegisterEventsRequest) (*api.RegisterEventsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterEvents", req)
	ret0, _ := ret[0].(*api.RegisterEventsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RegisterEvents indicates an expected call of RegisterEvents.
func (mr *MockRestClientMockRecorder) RegisterEvents(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterEvents", reflect.TypeOf((*MockRestClient)(nil).RegisterEvents), req)
}
